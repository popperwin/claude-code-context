# ${PROJECT_NAME}

This project is configured with claude-code-context for semantic code search and context enrichment.

## üöÄ Quick Start

### Using Context Search

Use `<ccc>query</ccc>` tags in your Claude Code prompts to search for relevant context:

```
How do I implement authentication <ccc>authentication login user management</ccc> in this codebase?
```

```
Show me examples of data processing <ccc>data processing algorithms functions</ccc> from this project.
```

```
Help me understand the API structure <ccc>API endpoints routes handlers</ccc> in this application.
```

## üì¶ Project Configuration

This project uses the following Qdrant collections for semantic search:
- `${COLLECTION_PREFIX}-code` - Code entities, functions, and classes
- `${COLLECTION_PREFIX}-relations` - Relationships between code elements
- `${COLLECTION_PREFIX}-embeddings` - Semantic embeddings for search

## üîß Available Commands

### Indexing Commands
```bash
# Index the entire project
claude-indexer index -p . -c ${COLLECTION_PREFIX}-code

# Index specific directory
claude-indexer index -p ./src -c ${COLLECTION_PREFIX}-code

# Watch for changes and auto-index
claude-indexer watch -p . -c ${COLLECTION_PREFIX}-code
```

### Search Commands
```bash
# Search for code entities
claude-indexer search -c ${COLLECTION_PREFIX}-code -q "authentication function"

# Search with filters
claude-indexer search -c ${COLLECTION_PREFIX}-code -q "database" --file-type python

# Get collection stats
claude-indexer stats -c ${COLLECTION_PREFIX}-code
```

### Management Commands
```bash
# List all collections
claude-indexer list-collections

# Delete collection (careful!)
claude-indexer delete -c ${COLLECTION_PREFIX}-code

# Health check
claude-indexer health
```

## üìÅ File Locations

- **Project config**: `.claude-indexer/config.json`
- **Claude settings**: `.claude/settings.json`
- **Global config**: `~/.claude-indexer/`
- **Cache directory**: `~/.cache/claude-indexer/`

## üîç Search Tips

### Effective Query Patterns
- **Function searches**: `<ccc>user authentication login function</ccc>`
- **Class searches**: `<ccc>database model user class</ccc>`
- **Pattern searches**: `<ccc>error handling exception patterns</ccc>`
- **API searches**: `<ccc>REST API endpoints routes</ccc>`

### Search Best Practices
1. Use specific, descriptive terms
2. Include multiple related keywords
3. Mention the type of code element (function, class, etc.)
4. Use domain-specific terminology

## ‚öôÔ∏è Configuration

### Indexing Patterns
The project is configured to index these file types:
- **Code**: `.py`, `.js`, `.ts`, `.jsx`, `.tsx`, `.go`, `.rs`, `.java`, `.cpp`, `.c`, `.h`
- **Config**: `.json`, `.yaml`, `.yml`, `.toml`
- **Docs**: `.md`, `.txt`

### Excluded Patterns
- `node_modules/*`, `.git/*`, `__pycache__/*`
- `venv/*`, `.venv/*`, `build/*`, `dist/*`
- `*.log`, `*.tmp`, `*.cache`, `.DS_Store`

## üêõ Troubleshooting

### Common Issues

**Qdrant not accessible**
```bash
# Check Qdrant status
curl http://localhost:6333/health

# Start Qdrant
./scripts/setup-qdrant.sh
```

**Collections not found**
```bash
# Recreate collections
./setup-project.sh ${PROJECT_NAME} --overwrite
```

**Search returns no results**
```bash
# Check if project is indexed
claude-indexer stats -c ${COLLECTION_PREFIX}-code

# Reindex if needed
claude-indexer index -p . -c ${COLLECTION_PREFIX}-code
```

**Hook not working**
- Check `.claude/settings.json` configuration
- Verify `PROJECT_NAME` and `COLLECTION_PREFIX` environment variables
- Ensure Qdrant is running and accessible

### Getting Help

```bash
# Show CLI help
claude-indexer --help

# Show command-specific help
claude-indexer index --help
claude-indexer search --help
```

## üîß Advanced Configuration

### Custom File Patterns
Edit `.claude-indexer/config.json`:
```json
{
  "indexing": {
    "include_patterns": ["*.py", "*.custom"],
    "exclude_patterns": ["temp/*"]
  }
}
```

### Performance Tuning
```json
{
  "qdrant": {
    "batch_size": 50,
    "parallel_requests": 2
  },
  "stella": {
    "batch_size": 16,
    "use_fp16": true
  }
}
```

### Search Behavior
```json
{
  "context_settings": {
    "max_results_per_query": 10,
    "min_relevance_score": 0.2,
    "enable_hybrid_search": true
  }
}
```

## üìä Monitoring

### View Collection Stats
```bash
# Collection information
curl http://localhost:6333/collections/${COLLECTION_PREFIX}-code

# All collections
curl http://localhost:6333/collections
```

### Performance Metrics
```bash
# Indexing performance
claude-indexer index -p . -c ${COLLECTION_PREFIX}-code --benchmark

# Search performance  
claude-indexer search -c ${COLLECTION_PREFIX}-code -q "test" --benchmark
```

---

Generated by claude-code-context v1.0.0 | [Documentation](https://github.com/popperwin/claude-code-context)